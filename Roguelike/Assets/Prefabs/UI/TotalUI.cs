using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

////////////////////////////////////////////////////////////////////////////////
/// : 전체적인 UI를 관리합니다.
////////////////////////////////////////////////////////////////////////////////
public class TotalUI : FieldObjectSingleton<TotalUI>
{
    [SerializeField]
    private GameObject createMap;
    [SerializeField]
    private HpBar hpBar;
    [SerializeField]
    private ExpBar expBar;
    [SerializeField]
    private MiniMapUI miniMap;

    ////////////////////////////////////////////////////////////////////////////////
    /// : 맵 생성중인지를 표시해줍니다.
    ////////////////////////////////////////////////////////////////////////////////
    public void ShowCreateMap(bool pState)
    {
        createMap.SetActive(pState);
    }

    ////////////////////////////////////////////////////////////////////////////////
    /// : 체력 상태 갱신
    ////////////////////////////////////////////////////////////////////////////////
    public void UpdateHp(uint pMaxHp,uint pNowHp)
    {
        hpBar.UpdateHp(pMaxHp, pNowHp);
    }

    ////////////////////////////////////////////////////////////////////////////////
    /// : 경험치 상태 갱신
    ////////////////////////////////////////////////////////////////////////////////
    public void UpdateExp(uint pMaxExp, uint pNowExp)
    {
        expBar.UpdateExp(pMaxExp, pNowExp);
    }

    ////////////////////////////////////////////////////////////////////////////////
    /// : 경험치 상태 갱신
    ////////////////////////////////////////////////////////////////////////////////
    public void UpdateMiniMap(Vector2Int pPos)
    {
        MapManager mapManager = MapManager.instance;
        mapManager.UpdateMiniMap(pPos);

        Texture2D miniMapTexture = mapManager.GetMiniMapTexture();
        miniMap.UpdateMiniMap(miniMapTexture);
    }
}
